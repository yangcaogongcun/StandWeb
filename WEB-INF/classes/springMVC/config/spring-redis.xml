<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:redis.properties" />
    </bean>
	
	<bean id="redisjedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="minIdle" value="${redis.minIdle}" />
        <property name="maxTotal" value="${redis.maxActive}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnBorrow}"/>
        <!-- <property name="testWhileIdle" value="true"/> -->
    </bean>
	<bean id="redisshardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="redisjedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis.host}" />
                    <constructor-arg index="1" value="${redis.port}" />
                    <constructor-arg index="2" value="${redis.timeout}" />
                    <property name="password" value="${redis.password}"/>
                 
                </bean>
            </list>
        </constructor-arg>
    </bean>
	<bean id="redisjedisDataSource" class="com.stand.spring.redis.RedisDataSourceImpl ">
	<property name="shardedJedisPool" ref="redisshardedJedisPool"></property>
	</bean>
	<bean id="redisClient" class="com.stand.spring.redis.RedisClientTemplate ">
	<property name="redisDataSource" ref="redisjedisDataSource"></property>
	</bean>
	
	</beans>